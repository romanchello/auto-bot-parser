
import logging
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import time
import os

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHROMEDRIVER_PATH = "/opt/homebrew/bin/chromedriver"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Selenium
def create_driver():
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    service = Service(CHROMEDRIVER_PATH)
    return webdriver.Chrome(service=service, options=options)

# –ü–æ–∏—Å–∫ –º–∞—à–∏–Ω
def search_cars():
    driver = create_driver()
    search_url = "https://suchen.mobile.de/fahrzeuge/search.html?vc=Car&dam=false&fr=2022%3A&ms=25200%3B%3B&sb=rel&searchId=&ref=quickSearch"
    driver.get(search_url)
    time.sleep(3)

    ads = driver.find_elements(By.CSS_SELECTOR, "a[href*='/fahrzeuge/details.html']")
    urls = list(set([ad.get_attribute("href") for ad in ads]))[:3]
    results = []

    for url in urls:
        driver.get(url)
        time.sleep(2)

        def get_text(by, value):
            try:
                return driver.find_element(by, value).text
            except:
                return "‚Äî"

        results.append({
            "–ù–∞–∑–≤–∞–Ω–∏–µ": get_text(By.CSS_SELECTOR, "h1 span"),
            "–¶–µ–Ω–∞": get_text(By.CSS_SELECTOR, '[data-testid="prime-price"]'),
            "–ù–µ—Ç—Ç–æ": get_text(By.XPATH, '//div[contains(text(), "Netto")]'),
            "–ü—Ä–æ–±–µ–≥": get_text(By.XPATH, '//li[contains(text(), "km")]'),
            "–ú–æ—â–Ω–æ—Å—Ç—å": get_text(By.XPATH, '//li[contains(text(), "kW")]'),
            "–ö–æ—Ä–æ–±–∫–∞": get_text(By.XPATH, '//li[contains(text(), "Automatik") or contains(text(), "Schaltgetriebe")]'),
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è": get_text(By.XPATH, '//li[contains(text(), "Erstzulassung")]'),
            "–°—Å—ã–ª–∫–∞": url
        })

    driver.quit()
    return results

# –ë–æ—Ç
bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=["start"])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: Volkswagen ID.4 2022 –¥–∏–∑–µ–ª—å")

@bot.message_handler(func=lambda msg: True)
def handle_query(message):
    bot.send_message(message.chat.id, "–ò—â—É –∞–≤—Ç–æ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")
    results = search_cars()
    for car in results:
        text = f"<b>{car['–ù–∞–∑–≤–∞–Ω–∏–µ']}</b>\nüí∂ {car['–¶–µ–Ω–∞']} (Netto: {car['–ù–µ—Ç—Ç–æ']})\nüöó {car['–ü—Ä–æ–±–µ–≥']}\n‚ö° {car['–ú–æ—â–Ω–æ—Å—Ç—å']}\nüîÅ {car['–ö–æ—Ä–æ–±–∫–∞']}\nüìÖ {car['–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è']}\nüîó {car['–°—Å—ã–ª–∫–∞']}"
        bot.send_message(message.chat.id, text, parse_mode="HTML")

bot.infinity_polling()
